# Define versions used to select image versions
# (ARGs declared before FROM can't be used outside of FROMs)
ARG FROM_V8=6.9
ARG FROM_ALPINE=
ARG FROM_PHP=7.1.22

# Compress libv8 and save for later
FROM alexmasterov/alpine-libv8:$FROM_V8 as v8build
RUN tar cvzf /tmp/libv8.tar.gz -C ${V8_DIR} .

# Build PHP Image
FROM php:${FROM_PHP}-fpm-alpine${FROM_ALPINE}

COPY --from=v8build /tmp/libv8.tar.gz /tmp/libv8.tar.gz

# Install build dependencies
RUN apk add -u --no-cache --virtual .build-deps \
		$PHPIZE_DEPS \
		zlib-dev \
		g++ \
		make \

	# V8JS
	&& export V8_DIR=/usr/local/v8 \
	&& mkdir -p $V8_DIR \
	&& tar xzvf /tmp/libv8.tar.gz -C $V8_DIR \
	&& echo $V8_dir | pecl install v8js \
	&& docker-php-ext-enable v8js \
	&& rm -rf /tmp/libv8.tar.gz \

	# Cleanup
	&& apk del .build-deps

# FROM php:7.1.22-fpm-alpine

RUN apk add --no-cache \
	autoconf \
	bash \
	build-base \
	cyrus-sasl-dev \
	freetype \
	git \
	libjpeg-turbo-dev \
	libmcrypt-dev \
	libmemcached-dev \
	libpng-dev \
	libxml2-dev \
	zlib-dev


# PECL Libraries
# memcached build manually
RUN docker-php-ext-configure gd --with-jpeg-dir=/usr/include

RUN docker-php-ext-install \
	bcmath \
	gd \
	mbstring \
	mcrypt \
	pdo_mysql \
	xml \
	zip \
	&& rm -rf /usr/src/php

RUN git clone -b v3.0.2 https://github.com/php-memcached-dev/php-memcached.git \
	&& cd php-memcached \
	&& git checkout php7 \
	&& phpize \
	&& ./configure \
	&& make \
	&& make install \
	&& docker-php-ext-enable memcached \
	&& rm -rf /usr/src/php

# Make sure composer is installed globally
RUN bash -c "curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer"

# hack to let php write to the shared disk with boot2docker shares
# files shared from host into a container appear to use a user on host with UID 1000
# looks like this container not only doesnt have a user at 1000, but the www-data user cant write to these files
# so, this changes www-data's uid to 1000
# RUN usermod -u 1000 www-data
RUN sed -i "s/^www-data:x:[0-9]*/www-data:x:1000/" /etc/passwd

RUN pecl install xdebug

# add script that helps us wait for other containers
COPY wait-for-it.sh /wait-for-it.sh
RUN chmod +x /wait-for-it.sh
